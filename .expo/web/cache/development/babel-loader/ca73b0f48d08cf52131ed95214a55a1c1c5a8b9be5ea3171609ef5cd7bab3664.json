{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getGeneros } from \"../../component/api/spotifyApi\";\nimport ThemeToogler from \"../../component/themeToogler/themeToogler\";\nimport ThemeContext from \"../../context/context\";\nimport AppTheme from \"../../component/themes/themes\";\nimport { useContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PreferenciasScreen = function PreferenciasScreen() {\n  var _useState = useState({\n      genres: []\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    fetchResult = _useState2[0],\n    setFetchResult = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedGenres = _useState4[0],\n    setSelectedGenres = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchQuery = _useState6[0],\n    setSearchQuery = _useState6[1];\n  var theme = useContext(ThemeContext)[0];\n  useEffect(function () {\n    fetchPreferences();\n  }, []);\n  function fetchPreferences() {\n    return _fetchPreferences.apply(this, arguments);\n  }\n  function _fetchPreferences() {\n    _fetchPreferences = _asyncToGenerator(function* () {\n      try {\n        var _yield$getGeneros = yield getGeneros(),\n          genres = _yield$getGeneros.data.genres;\n        setFetchResult({\n          genres: genres\n        });\n        console.log(genres);\n      } catch (error) {\n        setFetchResult({\n          genres: []\n        });\n        console.error(error);\n      }\n    });\n    return _fetchPreferences.apply(this, arguments);\n  }\n  function handleGenreSelect(genre) {\n    if (selectedGenres.includes(genre)) {\n      setSelectedGenres(selectedGenres.filter(function (selectedGenre) {\n        return selectedGenre !== genre;\n      }));\n    } else if (selectedGenres.length < 5) {\n      setSelectedGenres([].concat(_toConsumableArray(selectedGenres), [genre]));\n    }\n  }\n  function handleSavePreferences() {\n    return _handleSavePreferences.apply(this, arguments);\n  }\n  function _handleSavePreferences() {\n    _handleSavePreferences = _asyncToGenerator(function* () {\n      if (selectedGenres.length === 0) {\n        Alert.alert('Erro', 'Selecione pelo menos um gênero.');\n        return;\n      }\n      try {\n        yield AsyncStorage.setItem('selectedGenres', JSON.stringify(selectedGenres));\n        Alert.alert('Sucesso', 'Preferências salvas com sucesso!');\n      } catch (error) {\n        console.error(error);\n        Alert.alert('Erro', 'Ocorreu um erro ao salvar as preferências.');\n      }\n    });\n    return _handleSavePreferences.apply(this, arguments);\n  }\n  function filterGenres() {\n    return fetchResult.genres.filter(function (genre) {\n      return genre.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n  }\n  return _jsxs(View, {\n    style: [styles.container, AppTheme[theme + \"Container\"]],\n    children: [_jsxs(View, {\n      style: styles.topRow,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSavePreferences,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Pronto\"\n        })\n      }), _jsx(ThemeToogler, {})]\n    }), _jsx(TextInput, {\n      style: styles.searchInput,\n      placeholder: \"Buscar g\\xEAnero\",\n      onChangeText: setSearchQuery\n    }), _jsx(View, {\n      style: styles.bottomRow,\n      children: filterGenres().map(function (genre) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.genreCard, selectedGenres.includes(genre) && styles.selectedGenreCard],\n          onPress: function onPress() {\n            return handleGenreSelect(genre);\n          },\n          activeOpacity: 0.7,\n          children: _jsx(Text, {\n            style: [styles.genreText, selectedGenres.includes(genre) && styles.selectedGenreText],\n            children: genre\n          })\n        }, genre);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  topRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    paddingHorizontal: 16,\n    paddingTop: 16\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 8,\n    backgroundColor: '#1DB954'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  searchInput: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 8,\n    height: 40,\n    marginVertical: 16,\n    paddingHorizontal: 16,\n    width: '90%'\n  },\n  bottomRow: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    paddingHorizontal: 16\n  },\n  genreCard: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 16,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    margin: 8\n  },\n  genreText: {\n    color: '#1E1E1E',\n    fontSize: 16\n  },\n  selectedGenreCard: {\n    backgroundColor: '#1DB954'\n  },\n  selectedGenreText: {\n    color: 'white'\n  }\n});\nexport default PreferenciasScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Text","Image","TouchableOpacity","Alert","TextInput","AsyncStorage","getGeneros","ThemeToogler","ThemeContext","AppTheme","useContext","jsx","_jsx","jsxs","_jsxs","PreferenciasScreen","_useState","genres","_useState2","_slicedToArray","fetchResult","setFetchResult","_useState3","_useState4","selectedGenres","setSelectedGenres","_useState5","_useState6","searchQuery","setSearchQuery","theme","fetchPreferences","_fetchPreferences","apply","arguments","_asyncToGenerator","_yield$getGeneros","data","console","log","error","handleGenreSelect","genre","includes","filter","selectedGenre","length","concat","_toConsumableArray","handleSavePreferences","_handleSavePreferences","alert","setItem","JSON","stringify","filterGenres","toLowerCase","style","styles","container","children","topRow","button","onPress","buttonText","searchInput","placeholder","onChangeText","bottomRow","map","genreCard","selectedGenreCard","activeOpacity","genreText","selectedGenreText","create","flex","alignItems","justifyContent","flexDirection","width","paddingHorizontal","paddingTop","paddingVertical","borderRadius","backgroundColor","color","fontSize","fontWeight","height","marginVertical","flexWrap","margin"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/screens/PreferenciasScreen/PreferenciasScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, View, Text, Image, TouchableOpacity, Alert, TextInput } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { getGeneros } from '../../component/api/spotifyApi';\r\nimport ThemeToogler from '../../component/themeToogler/themeToogler';\r\nimport ThemeContext from '../../context/context';\r\nimport AppTheme from '../../component/themes/themes';\r\nimport { useContext } from 'react';\r\n\r\nconst PreferenciasScreen = () => {\r\n  const [fetchResult, setFetchResult] = useState({ genres: [] });\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const theme = useContext(ThemeContext)[0];\r\n\r\n  useEffect(() => {\r\n    fetchPreferences();\r\n  }, []);\r\n\r\n  async function fetchPreferences() {\r\n    try {\r\n      const { data: { genres } } = await getGeneros();\r\n      setFetchResult({ genres });\r\n      console.log(genres);\r\n    } catch (error) {\r\n      setFetchResult({ genres: [] });\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function handleGenreSelect(genre) {\r\n    if (selectedGenres.includes(genre)) {\r\n      setSelectedGenres(selectedGenres.filter((selectedGenre) => selectedGenre !== genre));\r\n    } else if (selectedGenres.length < 5) {\r\n      setSelectedGenres([...selectedGenres, genre]);\r\n    }\r\n  }\r\n\r\n  async function handleSavePreferences() {\r\n    if (selectedGenres.length === 0) {\r\n      Alert.alert('Erro', 'Selecione pelo menos um gênero.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await AsyncStorage.setItem('selectedGenres', JSON.stringify(selectedGenres));\r\n      Alert.alert('Sucesso', 'Preferências salvas com sucesso!');\r\n    } catch (error) {\r\n      console.error(error);\r\n      Alert.alert('Erro', 'Ocorreu um erro ao salvar as preferências.');\r\n    }\r\n  }\r\n\r\n  function filterGenres() {\r\n    return fetchResult.genres.filter((genre) => genre.toLowerCase().includes(searchQuery.toLowerCase()));\r\n  }\r\n\r\n  return (\r\n    <View style={[styles.container,AppTheme[theme+\"Container\"]]}>\r\n      <View style={styles.topRow}>\r\n        <TouchableOpacity style={styles.button} onPress={handleSavePreferences}>\r\n          <Text style={styles.buttonText}>Pronto</Text>\r\n        </TouchableOpacity>\r\n        {<ThemeToogler></ThemeToogler>}\r\n      </View>\r\n      <TextInput style={styles.searchInput} placeholder=\"Buscar gênero\" onChangeText={setSearchQuery} />\r\n      <View style={styles.bottomRow}>\r\n        {filterGenres().map((genre) => (\r\n          <TouchableOpacity\r\n            key={genre}\r\n            style={[styles.genreCard, selectedGenres.includes(genre) && styles.selectedGenreCard]}\r\n            onPress={() => handleGenreSelect(genre)}\r\n            activeOpacity={0.7}\r\n          >\r\n            <Text style={[styles.genreText, selectedGenres.includes(genre) && styles.selectedGenreText]}>{genre}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    topRow: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      width: '100%',\r\n      paddingHorizontal: 16,\r\n      paddingTop: 16,\r\n    },\r\n    button: {\r\n      paddingVertical: 8,\r\n      paddingHorizontal: 12,\r\n      borderRadius: 8,\r\n      backgroundColor: '#1DB954',\r\n    },\r\n    buttonText: {\r\n      color: 'white',\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n    },\r\n    searchInput: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 8,\r\n      height: 40,\r\n      marginVertical: 16,\r\n      paddingHorizontal: 16,\r\n      width: '90%',\r\n    },\r\n    bottomRow: {\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n      width: '100%',\r\n      paddingHorizontal: 16,\r\n    },\r\n    genreCard: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 16,\r\n      paddingVertical: 8,\r\n      paddingHorizontal: 16,\r\n      margin: 8,\r\n    },\r\n    genreText: {\r\n      color: '#1E1E1E',\r\n      fontSize: 16,\r\n    },\r\n    selectedGenreCard: {\r\n      backgroundColor: '#1DB954',\r\n    },\r\n    selectedGenreText: {\r\n      color: 'white',\r\n    },\r\n  });\r\n  \r\n\r\nexport default PreferenciasScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}