{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { buscarArtistasPorGenero, buscarArtistasPorNome } from \"../../component/api/spotifyApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var selectedGenres = route.params.selectedGenres;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    artists = _useState2[0],\n    setArtists = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var handleGenrePress = function () {\n    var _ref2 = _asyncToGenerator(function* (genre) {\n      var response = yield buscarArtistasPorGenero(genre);\n      setArtists(response.artists);\n    });\n    return function handleGenrePress(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSearchQueryChange = function handleSearchQueryChange(text) {\n    setSearchQuery(text);\n  };\n  var handleSearchSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (searchQuery !== \"\") {\n        var response = yield buscarArtistasPorNome(searchQuery);\n        setArtists(response.artists);\n      }\n    });\n    return function handleSearchSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderArtist = function renderArtist(artist) {\n    if (!artist || !artist.images || !artist.images[0]) {\n      return null;\n    }\n    return _jsx(View, {\n      style: styles.artistCard,\n      children: _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Artist', {\n            artist: artist\n          });\n        },\n        children: [_jsx(Image, {\n          style: styles.artistImage,\n          source: {\n            uri: artist.images[0].url\n          }\n        }), _jsx(Text, {\n          style: styles.artistName,\n          children: artist.name\n        })]\n      })\n    }, artist.id);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsx(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"Busque qualquer artista\",\n        value: searchQuery,\n        onChangeText: handleSearchQueryChange\n      }), _jsx(Text, {\n        style: styles.button,\n        onPress: handleSearchSubmit,\n        children: \"Procurar\"\n      })]\n    }), _jsx(Text, {\n      children: \"Ou busque por g\\xEAnero\"\n    }), _jsx(View, {\n      style: styles.genresContainer,\n      children: selectedGenres.map(function (genre) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.genreCard, {\n            backgroundColor: '#1DB954'\n          }],\n          onPress: function onPress() {\n            return handleGenrePress(genre);\n          },\n          children: _jsx(Text, {\n            style: styles.genreName,\n            children: genre\n          })\n        }, genre);\n      })\n    }), _jsx(View, {\n      style: styles.resultsContainer,\n      children: artists.items ? artists.items.map(function (artist) {\n        return renderArtist(artist);\n      }) : _jsx(Text, {})\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  button: {\n    backgroundColor: '#1DB954',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  genresContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n    flexWrap: 'wrap'\n  },\n  genreCard: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  genreName: {\n    color: '#FFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  artistCard: {\n    width: '48%',\n    borderRadius: 10,\n    backgroundColor: '#FFF',\n    marginVertical: 5,\n    elevation: 2,\n    overflow: 'hidden'\n  },\n  artistImage: {\n    height: 150,\n    width: '100%',\n    resizeMode: 'cover'\n  },\n  artistName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 10\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  searchInput: {\n    flex: 1,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: '#DDD',\n    borderRadius: 10,\n    padding: 10\n  },\n  resultsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","Text","TouchableOpacity","Image","TextInput","Button","buscarArtistasPorGenero","buscarArtistasPorNome","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","route","selectedGenres","params","_useState","_useState2","_slicedToArray","artists","setArtists","_useState3","_useState4","searchQuery","setSearchQuery","handleGenrePress","_ref2","_asyncToGenerator","genre","response","_x","apply","arguments","handleSearchQueryChange","text","handleSearchSubmit","_ref3","renderArtist","artist","images","style","styles","artistCard","children","onPress","navigate","artistImage","source","uri","url","artistName","name","id","container","searchContainer","searchInput","placeholder","value","onChangeText","button","genresContainer","map","genreCard","backgroundColor","genreName","resultsContainer","items","create","flex","padding","paddingVertical","paddingHorizontal","marginHorizontal","borderRadius","justifyContent","alignItems","marginVertical","flexDirection","marginBottom","flexWrap","color","fontSize","fontWeight","width","elevation","overflow","height","resizeMode","textAlign","marginRight","borderWidth","borderColor"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, Image, TextInput, Button } from 'react-native';\r\nimport { buscarArtistasPorGenero, buscarArtistasPorNome } from '../../component/api/spotifyApi';\r\n\r\nconst HomeScreen = ({ navigation, route }) => {\r\n  const { selectedGenres } = route.params;\r\n  const [artists, setArtists] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleGenrePress = async (genre) => {\r\n    const response = await buscarArtistasPorGenero(genre);\r\n    setArtists(response.artists);\r\n  }\r\n\r\n  const handleSearchQueryChange = (text) => {\r\n    setSearchQuery(text);\r\n  }\r\n\r\n  const handleSearchSubmit = async () => {\r\n    if(searchQuery !== \"\") {\r\n      const response = await buscarArtistasPorNome(searchQuery);\r\n      setArtists(response.artists);\r\n    }\r\n  }\r\n\r\n  const renderArtist = (artist) => {\r\n    if (!artist || !artist.images || !artist.images[0]) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <View style={styles.artistCard} key={artist.id}>\r\n        <TouchableOpacity onPress={() => navigation.navigate('Artist', { artist })}>\r\n          <Image style={styles.artistImage} source={{ uri: artist.images[0].url }} />\r\n          <Text style={styles.artistName}>{artist.name}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Busque qualquer artista\"\r\n          value={searchQuery}\r\n          onChangeText={handleSearchQueryChange}\r\n        />\r\n         <Text style={styles.button} onPress={handleSearchSubmit}>Procurar</Text>\r\n      </View>\r\n        <Text>Ou busque por gÃªnero</Text>\r\n      <View style={styles.genresContainer}>\r\n        {selectedGenres.map(genre => (\r\n          <TouchableOpacity\r\n            key={genre}\r\n            style={[styles.genreCard, { backgroundColor: '#1DB954', }]}\r\n            onPress={() => handleGenrePress(genre)}\r\n          >\r\n            <Text style={styles.genreName}>{genre}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      <View style={styles.resultsContainer}>\r\n        {artists.items ? (\r\n          artists.items.map(artist => renderArtist(artist))\r\n        ) : (\r\n          <Text ></Text>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      padding: 10,\r\n    },\r\n    button: {\r\n      backgroundColor: '#1DB954',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n      marginHorizontal: 5,\r\n      borderRadius: 10,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginVertical:5\r\n    },\r\n    genresContainer: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n      flexWrap: 'wrap',\r\n    },\r\n    genreCard: {\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n      marginHorizontal: 5,\r\n      borderRadius: 10,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginVertical:5\r\n    },  \r\n  genreName: {\r\n    color: '#FFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  artistCard: {\r\n    width: '48%',\r\n    borderRadius: 10,\r\n    backgroundColor: '#FFF',\r\n    marginVertical: 5,\r\n    elevation: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  artistImage: {\r\n    height: 150,\r\n    width: '100%',\r\n    resizeMode: 'cover',\r\n  },\r\n  artistName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginVertical: 10,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#DDD',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  resultsContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAEpD,SAASC,uBAAuB,EAAEC,qBAAqB;AAAyC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhG,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EACrC,IAAQC,cAAc,GAAKD,KAAK,CAACE,MAAM,CAA/BD,cAAc;EACtB,IAAAE,SAAA,GAA8BrB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAsB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAsC1B,QAAQ,CAAC,EAAE,CAAC;IAAA2B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,gBAAgB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAK;MACxC,IAAMC,QAAQ,SAASzB,uBAAuB,CAACwB,KAAK,CAAC;MACrDR,UAAU,CAACS,QAAQ,CAACV,OAAO,CAAC;IAC9B,CAAC;IAAA,gBAHKM,gBAAgBA,CAAAK,EAAA;MAAA,OAAAJ,KAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAGrB;EAED,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,IAAI,EAAK;IACxCV,cAAc,CAACU,IAAI,CAAC;EACtB,CAAC;EAED,IAAMC,kBAAkB;IAAA,IAAAC,KAAA,GAAAT,iBAAA,CAAG,aAAY;MACrC,IAAGJ,WAAW,KAAK,EAAE,EAAE;QACrB,IAAMM,QAAQ,SAASxB,qBAAqB,CAACkB,WAAW,CAAC;QACzDH,UAAU,CAACS,QAAQ,CAACV,OAAO,CAAC;MAC9B;IACF,CAAC;IAAA,gBALKgB,kBAAkBA,CAAA;MAAA,OAAAC,KAAA,CAAAL,KAAA,OAAAC,SAAA;IAAA;EAAA,GAKvB;EAED,IAAMK,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAM,EAAK;IAC/B,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,MAAM,IAAI,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE;MAClD,OAAO,IAAI;IACb;IAEA,OACEhC,IAAA,CAACT,IAAI;MAAC0C,KAAK,EAAEC,MAAM,CAACC,UAAW;MAAAC,QAAA,EAC7BlC,KAAA,CAACT,gBAAgB;QAAC4C,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMhC,UAAU,CAACiC,QAAQ,CAAC,QAAQ,EAAE;YAAEP,MAAM,EAANA;UAAO,CAAC,CAAC;QAAA,CAAC;QAAAK,QAAA,GACzEpC,IAAA,CAACN,KAAK;UAACuC,KAAK,EAAEC,MAAM,CAACK,WAAY;UAACC,MAAM,EAAE;YAAEC,GAAG,EAAEV,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACU;UAAI;QAAE,CAAE,CAAC,EAC3E1C,IAAA,CAACR,IAAI;UAACyC,KAAK,EAAEC,MAAM,CAACS,UAAW;UAAAP,QAAA,EAAEL,MAAM,CAACa;QAAI,CAAO,CAAC;MAAA,CACpC;IAAC,GAJgBb,MAAM,CAACc,EAKtC,CAAC;EAEX,CAAC;EAED,OACE3C,KAAA,CAACX,IAAI;IAAC0C,KAAK,EAAEC,MAAM,CAACY,SAAU;IAAAV,QAAA,GAC5BlC,KAAA,CAACX,IAAI;MAAC0C,KAAK,EAAEC,MAAM,CAACa,eAAgB;MAAAX,QAAA,GAClCpC,IAAA,CAACL,SAAS;QACRsC,KAAK,EAAEC,MAAM,CAACc,WAAY;QAC1BC,WAAW,EAAC,yBAAyB;QACrCC,KAAK,EAAElC,WAAY;QACnBmC,YAAY,EAAEzB;MAAwB,CACvC,CAAC,EACD1B,IAAA,CAACR,IAAI;QAACyC,KAAK,EAAEC,MAAM,CAACkB,MAAO;QAACf,OAAO,EAAET,kBAAmB;QAAAQ,QAAA,EAAC;MAAQ,CAAM,CAAC;IAAA,CACrE,CAAC,EACLpC,IAAA,CAACR,IAAI;MAAA4C,QAAA,EAAC;IAAoB,CAAM,CAAC,EACnCpC,IAAA,CAACT,IAAI;MAAC0C,KAAK,EAAEC,MAAM,CAACmB,eAAgB;MAAAjB,QAAA,EACjC7B,cAAc,CAAC+C,GAAG,CAAC,UAAAjC,KAAK;QAAA,OACvBrB,IAAA,CAACP,gBAAgB;UAEfwC,KAAK,EAAE,CAACC,MAAM,CAACqB,SAAS,EAAE;YAAEC,eAAe,EAAE;UAAW,CAAC,CAAE;UAC3DnB,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMnB,gBAAgB,CAACG,KAAK,CAAC;UAAA,CAAC;UAAAe,QAAA,EAEvCpC,IAAA,CAACR,IAAI;YAACyC,KAAK,EAAEC,MAAM,CAACuB,SAAU;YAAArB,QAAA,EAAEf;UAAK,CAAO;QAAC,GAJxCA,KAKW,CAAC;MAAA,CACpB;IAAC,CACE,CAAC,EACPrB,IAAA,CAACT,IAAI;MAAC0C,KAAK,EAAEC,MAAM,CAACwB,gBAAiB;MAAAtB,QAAA,EAClCxB,OAAO,CAAC+C,KAAK,GACZ/C,OAAO,CAAC+C,KAAK,CAACL,GAAG,CAAC,UAAAvB,MAAM;QAAA,OAAID,YAAY,CAACC,MAAM,CAAC;MAAA,EAAC,GAEjD/B,IAAA,CAACR,IAAI,IAAQ;IACd,CACG,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AACC,IAAM0C,MAAM,GAAG5C,UAAU,CAACsE,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDV,MAAM,EAAE;IACNI,eAAe,EAAE,SAAS;IAC1BO,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,gBAAgB,EAAE,CAAC;IACnBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAC;EACjB,CAAC;EACDhB,eAAe,EAAE;IACfiB,aAAa,EAAE,KAAK;IACpBH,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBG,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDjB,SAAS,EAAE;IACTQ,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,gBAAgB,EAAE,CAAC;IACnBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAC;EACjB,CAAC;EACHZ,SAAS,EAAE;IACTgB,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDxC,UAAU,EAAE;IACVyC,KAAK,EAAE,KAAK;IACZV,YAAY,EAAE,EAAE;IAChBV,eAAe,EAAE,MAAM;IACvBa,cAAc,EAAE,CAAC;IACjBQ,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDvC,WAAW,EAAE;IACXwC,MAAM,EAAE,GAAG;IACXH,KAAK,EAAE,MAAM;IACbI,UAAU,EAAE;EACd,CAAC;EACDrC,UAAU,EAAE;IACV+B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBM,SAAS,EAAE,QAAQ;IACnBZ,cAAc,EAAE;EAClB,CAAC;EACDtB,eAAe,EAAE;IACfuB,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDvB,WAAW,EAAE;IACXa,IAAI,EAAE,CAAC;IACPqB,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBlB,YAAY,EAAE,EAAE;IAChBJ,OAAO,EAAE;EACX,CAAC;EACDJ,gBAAgB,EAAE;IAChBY,aAAa,EAAE,KAAK;IACpBE,QAAQ,EAAE,MAAM;IAChBL,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAehE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}