{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { default as axios } from 'axios';\nimport querystring from 'querystring';\nvar baseURL = \"https://api.spotify.com/v1/\";\nvar authEndpoint = \"https://accounts.spotify.com/api/token\";\nvar clientId = \"e0610e0e032e4fbda1e9a21638218a6b\";\nvar clientSecret = \"6c05a3a1d34f4e84967720f98c7d3a40\";\nvar getToken = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var authString = clientId + \":\" + clientSecret;\n    var base64AuthString = Buffer.from(authString).toString('base64');\n    var config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Authorization\": \"Basic \" + base64AuthString\n      }\n    };\n    var data = {\n      grant_type: \"client_credentials\"\n    };\n    var response = yield axios.post(authEndpoint, querystring.stringify(data), config);\n    var token = response.data.access_token;\n    return token;\n  });\n  return function getToken() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar client = axios.create({\n  baseURL: baseURL,\n  timeout: 5000\n});\nvar buscarArtistasPorGenero = function () {\n  var _ref2 = _asyncToGenerator(function* (genero) {\n    var token = yield getToken();\n    var uri = \"search?type=artist&q=genre:\" + genero;\n    var response = yield client.get(uri, {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    });\n    return response.data.artists.items;\n  });\n  return function buscarArtistasPorGenero(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar getGeneros = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    var uri = encodeURI(\"recommendations/available-genre-seeds\");\n    return yield client.get(uri);\n  });\n  return function getGeneros() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport { getGeneros, buscarArtistasPorGenero };","map":{"version":3,"names":["default","axios","querystring","baseURL","authEndpoint","clientId","clientSecret","getToken","_ref","_asyncToGenerator","authString","base64AuthString","Buffer","from","toString","config","headers","data","grant_type","response","post","stringify","token","access_token","apply","arguments","client","create","timeout","buscarArtistasPorGenero","_ref2","genero","uri","get","artists","items","_x","getGeneros","_ref3","encodeURI"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/component/api/spotifyApi.js"],"sourcesContent":["import { default as axios } from 'axios';\r\nimport querystring from 'querystring';\r\n\r\nconst baseURL = \"https://api.spotify.com/v1/\";\r\n\r\nconst authEndpoint = \"https://accounts.spotify.com/api/token\";\r\nconst clientId = \"e0610e0e032e4fbda1e9a21638218a6b\";\r\nconst clientSecret = \"6c05a3a1d34f4e84967720f98c7d3a40\";\r\n\r\nconst getToken = async () => {\r\n  const authString = `${clientId}:${clientSecret}`;\r\n  const base64AuthString = Buffer.from(authString).toString('base64');\r\n  \r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      \"Authorization\": `Basic ${base64AuthString}`\r\n    }\r\n  };\r\n\r\n  const data = {\r\n    grant_type: \"client_credentials\"\r\n  };\r\n\r\n  const response = await axios.post(authEndpoint, querystring.stringify(data), config);\r\n  const token = response.data.access_token;\r\n  return token;\r\n};\r\n\r\nconst client = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000\r\n});\r\n\r\nconst buscarArtistasPorGenero = async (genero) => {\r\n  const token = await getToken();\r\n  const uri = `search?type=artist&q=genre:${genero}`;\r\n  const response = await client.get(uri, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${token}`\r\n    }\r\n  });\r\n  return response.data.artists.items;\r\n};\r\n\r\nconst getGeneros = async () => {\r\n    const uri = encodeURI(`recommendations/available-genre-seeds`)\r\n    return await client.get(uri)\r\n}\r\n\r\nexport {getGeneros, buscarArtistasPorGenero};\r\n"],"mappings":";AAAA,SAASA,OAAO,IAAIC,KAAK,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,aAAa;AAErC,IAAMC,OAAO,GAAG,6BAA6B;AAE7C,IAAMC,YAAY,GAAG,wCAAwC;AAC7D,IAAMC,QAAQ,GAAG,kCAAkC;AACnD,IAAMC,YAAY,GAAG,kCAAkC;AAEvD,IAAMC,QAAQ;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC3B,IAAMC,UAAU,GAAML,QAAQ,SAAIC,YAAc;IAChD,IAAMK,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC,CAACI,QAAQ,CAAC,QAAQ,CAAC;IAEnE,IAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,mCAAmC;QACnD,eAAe,aAAWL;MAC5B;IACF,CAAC;IAED,IAAMM,IAAI,GAAG;MACXC,UAAU,EAAE;IACd,CAAC;IAED,IAAMC,QAAQ,SAASlB,KAAK,CAACmB,IAAI,CAAChB,YAAY,EAAEF,WAAW,CAACmB,SAAS,CAACJ,IAAI,CAAC,EAAEF,MAAM,CAAC;IACpF,IAAMO,KAAK,GAAGH,QAAQ,CAACF,IAAI,CAACM,YAAY;IACxC,OAAOD,KAAK;EACd,CAAC;EAAA,gBAlBKf,QAAQA,CAAA;IAAA,OAAAC,IAAA,CAAAgB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkBb;AAED,IAAMC,MAAM,GAAGzB,KAAK,CAAC0B,MAAM,CAAC;EACxBxB,OAAO,EAAEA,OAAO;EAChByB,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,IAAMC,uBAAuB;EAAA,IAAAC,KAAA,GAAArB,iBAAA,CAAG,WAAOsB,MAAM,EAAK;IAChD,IAAMT,KAAK,SAASf,QAAQ,CAAC,CAAC;IAC9B,IAAMyB,GAAG,mCAAiCD,MAAQ;IAClD,IAAMZ,QAAQ,SAASO,MAAM,CAACO,GAAG,CAACD,GAAG,EAAE;MACrChB,OAAO,EAAE;QACP,eAAe,cAAYM;MAC7B;IACF,CAAC,CAAC;IACF,OAAOH,QAAQ,CAACF,IAAI,CAACiB,OAAO,CAACC,KAAK;EACpC,CAAC;EAAA,gBATKN,uBAAuBA,CAAAO,EAAA;IAAA,OAAAN,KAAA,CAAAN,KAAA,OAAAC,SAAA;EAAA;AAAA,GAS5B;AAED,IAAMY,UAAU;EAAA,IAAAC,KAAA,GAAA7B,iBAAA,CAAG,aAAY;IAC3B,IAAMuB,GAAG,GAAGO,SAAS,wCAAwC,CAAC;IAC9D,aAAab,MAAM,CAACO,GAAG,CAACD,GAAG,CAAC;EAChC,CAAC;EAAA,gBAHKK,UAAUA,CAAA;IAAA,OAAAC,KAAA,CAAAd,KAAA,OAAAC,SAAA;EAAA;AAAA,GAGf;AAED,SAAQY,UAAU,EAAER,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}