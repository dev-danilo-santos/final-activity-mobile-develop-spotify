{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ThemeContext from \"../../context/context\";\nimport AppTheme from \"../../component/themes/themes\";\nimport { buscarArtistasPorGenero } from \"../../component/api/spotifyApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var selectedGenres = route.params.selectedGenres;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    artists = _useState2[0],\n    setArtists = _useState2[1];\n  var handleGenrePress = function () {\n    var _ref2 = _asyncToGenerator(function* (genre) {\n      try {\n        var response = yield buscarArtistasPorGenero(genre);\n        setArtists(response.artists.items);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleGenrePress(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(ThemeContext.Provider, {\n    value: AppTheme,\n    children: _jsx(View, {\n      style: styles.container,\n      children: selectedGenres.map(function (genre) {\n        return _jsxs(TouchableOpacity, {\n          style: [styles.genreContainer],\n          onPress: function onPress() {\n            return handleGenrePress(genre);\n          },\n          children: [_jsx(Text, {\n            style: styles.genreText,\n            children: genre\n          }), artists.length > 0 && artists.map(function (artist) {\n            return _jsxs(View, {\n              style: styles.artistContainer,\n              children: [_jsx(Image, {\n                style: styles.artistImage,\n                source: {\n                  uri: artist.images[0].url\n                }\n              }), _jsx(Text, {\n                style: styles.artistName,\n                children: artist.name\n              })]\n            }, artist.id);\n          })]\n        }, genre);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  genreContainer: {\n    alignItems: 'center',\n    borderRadius: 10,\n    height: 150,\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10,\n    width: '45%'\n  },\n  genreText: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  artistContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  artistImage: {\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    marginRight: 10\n  },\n  artistName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","Text","TouchableOpacity","Image","ThemeContext","AppTheme","buscarArtistasPorGenero","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","route","selectedGenres","params","_useState","_useState2","_slicedToArray","artists","setArtists","handleGenrePress","_ref2","_asyncToGenerator","genre","response","items","error","console","log","_x","apply","arguments","Provider","value","children","style","styles","container","map","genreContainer","onPress","genreText","length","artist","artistContainer","artistImage","source","uri","images","url","artistName","name","id","create","flex","flexDirection","flexWrap","justifyContent","padding","alignItems","borderRadius","height","marginBottom","width","color","fontSize","fontWeight","textAlign","marginTop","marginRight"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, Image } from 'react-native';\r\nimport ThemeContext from '../../context/context';\r\nimport AppTheme from '../../component/themes/themes';\r\nimport { buscarArtistasPorGenero } from '../../component/api/spotifyApi';\r\n\r\nconst HomeScreen = ({ navigation, route }) => {\r\n  const { selectedGenres } = route.params;\r\n  const [artists, setArtists] = useState([]);\r\n\r\n  const handleGenrePress = async (genre) => {\r\n    try {\r\n      const response = await buscarArtistasPorGenero(genre);\r\n      setArtists(response.artists.items);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={AppTheme}>\r\n      <View style={styles.container}>\r\n        {selectedGenres.map((genre) => (\r\n          <TouchableOpacity\r\n            key={genre}\r\n            style={[styles.genreContainer]}\r\n            onPress={() => handleGenrePress(genre)}\r\n          >\r\n            <Text style={styles.genreText}>{genre}</Text>\r\n            {artists.length > 0 &&\r\n              artists.map((artist) => (\r\n                <View key={artist.id} style={styles.artistContainer}>\r\n                  <Image style={styles.artistImage} source={{ uri: artist.images[0].url }} />\r\n                  <Text style={styles.artistName}>{artist.name}</Text>\r\n                </View>\r\n              ))}\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  genreContainer: {\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    height: 150,\r\n    justifyContent: 'space-between',\r\n    marginBottom: 20,\r\n    padding: 10,\r\n    width: '45%',\r\n  },\r\n  genreText: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  artistContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n  },\r\n  artistImage: {\r\n    height: 50,\r\n    width: 50,\r\n    borderRadius: 25,\r\n    marginRight: 10,\r\n  },\r\n  artistName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}