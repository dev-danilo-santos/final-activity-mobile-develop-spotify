{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { buscarArtistasPorGenero } from \"../../component/api/spotifyApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ArtistasPorGenero = function ArtistasPorGenero(_ref) {\n  var genero = _ref.genero;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    artistas = _useState2[0],\n    setArtistas = _useState2[1];\n  useEffect(function () {\n    var fetchArtistas = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var response = yield buscarArtistasPorGenero(genero);\n        setArtistas(response);\n      });\n      return function fetchArtistas() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchArtistas();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: genero\n    }), _jsx(View, {\n      style: styles.artistList,\n      children: artistas.map(function (artista) {\n        return _jsx(Text, {\n          style: styles.artist,\n          children: artista.nome\n        }, artista.id);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    margin: 16\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  artistList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  artist: {\n    padding: 8,\n    margin: 8,\n    borderRadius: 4,\n    backgroundColor: '#f2f2f2',\n    fontSize: 16\n  }\n});\nexport default ArtistasPorGenero;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","buscarArtistasPorGenero","jsx","_jsx","jsxs","_jsxs","ArtistasPorGenero","_ref","genero","_useState","_useState2","_slicedToArray","artistas","setArtistas","fetchArtistas","_ref2","_asyncToGenerator","response","apply","arguments","style","styles","container","children","title","artistList","map","artista","artist","nome","id","create","margin","fontSize","fontWeight","marginBottom","flexDirection","flexWrap","justifyContent","padding","borderRadius","backgroundColor"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/screens/HomeScreen/ArtistasPorGenero.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text } from 'react-native';\r\nimport { buscarArtistasPorGenero } from '../../component/api/spotifyApi';\r\n\r\nconst ArtistasPorGenero = ({ genero }) => {\r\n  const [artistas, setArtistas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchArtistas = async () => {\r\n      const response = await buscarArtistasPorGenero(genero);\r\n      setArtistas(response);\r\n    };\r\n\r\n    fetchArtistas();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{genero}</Text>\r\n      <View style={styles.artistList}>\r\n        {artistas.map((artista) => (\r\n          <Text key={artista.id} style={styles.artist}>{artista.nome}</Text>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    margin: 16,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  artistList: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  artist: {\r\n    padding: 8,\r\n    margin: 8,\r\n    borderRadius: 4,\r\n    backgroundColor: '#f2f2f2',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default ArtistasPorGenero;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,SAASC,uBAAuB;AAAyC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzE,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAmB;EAAA,IAAbC,MAAM,GAAAD,IAAA,CAANC,MAAM;EACjC,IAAAC,SAAA,GAAgCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5Bb,SAAS,CAAC,YAAM;IACd,IAAMiB,aAAa;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAChC,IAAMC,QAAQ,SAAShB,uBAAuB,CAACO,MAAM,CAAC;QACtDK,WAAW,CAACI,QAAQ,CAAC;MACvB,CAAC;MAAA,gBAHKH,aAAaA,CAAA;QAAA,OAAAC,KAAA,CAAAG,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGlB;IAEDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OACET,KAAA,CAACN,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpB,IAAA,CAACH,IAAI;MAACoB,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAEf;IAAM,CAAO,CAAC,EAC1CL,IAAA,CAACJ,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACI,UAAW;MAAAF,QAAA,EAC5BX,QAAQ,CAACc,GAAG,CAAC,UAACC,OAAO;QAAA,OACpBxB,IAAA,CAACH,IAAI;UAAkBoB,KAAK,EAAEC,MAAM,CAACO,MAAO;UAAAL,QAAA,EAAEI,OAAO,CAACE;QAAI,GAA/CF,OAAO,CAACG,EAA8C,CAAC;MAAA,CACnE;IAAC,CACE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMT,MAAM,GAAGvB,UAAU,CAACiC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,MAAM,EAAE;EACV,CAAC;EACDR,KAAK,EAAE;IACLS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDV,UAAU,EAAE;IACVW,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBC,cAAc,EAAE;EAClB,CAAC;EACDV,MAAM,EAAE;IACNW,OAAO,EAAE,CAAC;IACVP,MAAM,EAAE,CAAC;IACTQ,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE,SAAS;IAC1BR,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe3B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}