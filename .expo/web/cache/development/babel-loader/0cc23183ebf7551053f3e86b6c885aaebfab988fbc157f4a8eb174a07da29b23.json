{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ThemeContext from \"../../context/context\";\nimport AppTheme from \"../themes/themes\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThemeToogler = function ThemeToogler() {\n  var _useContext = useContext(ThemeContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    themeMode = _useContext2[0],\n    setThemeMode = _useContext2[1];\n  return _jsxs(View, {\n    style: AppTheme[themeMode + 'Container'],\n    children: [_jsx(Text, {\n      style: [{\n        fontSize: 20\n      }],\n      children: themeMode === 'light' ? \"üåë\" : \"‚òÄÔ∏è\"\n    }), _jsx(Switch, {\n      style: {\n        transform: [{\n          saleX: 1.5\n        }, {\n          scaleY: 1.5\n        }]\n      },\n      value: themeMode === 'light' ? false : true,\n      onValueChange: function onValueChange() {\n        return setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\");\n      }\n    })]\n  });\n};\nexport default ThemeToogler;","map":{"version":3,"names":["React","useContext","View","Text","Switch","ThemeContext","AppTheme","jsx","_jsx","jsxs","_jsxs","ThemeToogler","_useContext","_useContext2","_slicedToArray","themeMode","setThemeMode","style","children","fontSize","transform","saleX","scaleY","value","onValueChange"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/component/themeToogler/themeToogler.js"],"sourcesContent":["import React, {useContext} from \"react\";\r\nimport { View, Text, Switch} from \"react-native\";\r\nimport ThemeContext from \"../../context/context\";\r\nimport AppTheme from \"../themes/themes\";\r\n\r\nconst ThemeToogler = () => {\r\n    const[themeMode, setThemeMode] = useContext(ThemeContext);\r\n\r\n    return(\r\n        <View style={AppTheme[themeMode+'Container']}>\r\n            <Text style={[{fontSize:20}]}>\r\n                {themeMode === 'light' ? \"üåë\" : \"‚òÄÔ∏è\"} \r\n            </Text>\r\n            <Switch\r\n             style={{transform: [{saleX:1.5}, {scaleY: 1.5}]}}\r\n             value={themeMode === 'light' ? false  : true}\r\n             onValueChange={() => setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\")}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default ThemeToogler;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAExC,OAAOC,YAAY;AACnB,OAAOC,QAAQ;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACvB,IAAAC,WAAA,GAAiCX,UAAU,CAACI,YAAY,CAAC;IAAAQ,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAAnDG,SAAS,GAAAF,YAAA;IAAEG,YAAY,GAAAH,YAAA;EAE7B,OACIH,KAAA,CAACR,IAAI;IAACe,KAAK,EAAEX,QAAQ,CAACS,SAAS,GAAC,WAAW,CAAE;IAAAG,QAAA,GACzCV,IAAA,CAACL,IAAI;MAACc,KAAK,EAAE,CAAC;QAACE,QAAQ,EAAC;MAAE,CAAC,CAAE;MAAAD,QAAA,EACxBH,SAAS,KAAK,OAAO,GAAG,IAAI,GAAG;IAAI,CAClC,CAAC,EACPP,IAAA,CAACJ,MAAM;MACNa,KAAK,EAAE;QAACG,SAAS,EAAE,CAAC;UAACC,KAAK,EAAC;QAAG,CAAC,EAAE;UAACC,MAAM,EAAE;QAAG,CAAC;MAAC,CAAE;MACjDC,KAAK,EAAER,SAAS,KAAK,OAAO,GAAG,KAAK,GAAI,IAAK;MAC7CS,aAAa,EAAE,SAAAA,cAAA;QAAA,OAAMR,YAAY,CAACD,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;MAAA;IAAC,CAC5E,CAAC;EAAA,CACA,CAAC;AAEf,CAAC;AAED,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}