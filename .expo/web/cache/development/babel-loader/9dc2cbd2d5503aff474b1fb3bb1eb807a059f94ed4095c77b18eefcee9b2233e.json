{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { buscarArtistasPorGenero, buscarArtistasPorNome } from \"../../component/api/spotifyApi\";\nimport ThemeContext from \"../../context/context\";\nimport AppTheme from \"../../component/themes/themes\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var selectedGenres = route.params.selectedGenres;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    artists = _useState2[0],\n    setArtists = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var theme = useContext(ThemeContext)[0];\n  var handleGenrePress = function () {\n    var _ref2 = _asyncToGenerator(function* (genre) {\n      var response = yield buscarArtistasPorGenero(genre);\n      setArtists(response.artists);\n    });\n    return function handleGenrePress(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSearchQueryChange = function handleSearchQueryChange(text) {\n    setSearchQuery(text);\n  };\n  var handleSearchSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (searchQuery !== \"\") {\n        var response = yield buscarArtistasPorNome(searchQuery);\n        setArtists(response.artists);\n      }\n    });\n    return function handleSearchSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderArtist = function renderArtist(artist) {\n    if (!artist || !artist.images || !artist.images[0]) {\n      return null;\n    }\n    return _jsx(View, {\n      style: styles.artistCard,\n      children: _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Artist', {\n            artist: artist\n          });\n        },\n        children: [_jsx(Image, {\n          style: styles.artistImage,\n          source: {\n            uri: artist.images[0].url\n          }\n        }), _jsx(Text, {\n          style: styles.artistName,\n          children: artist.name\n        })]\n      })\n    }, artist.id);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: [styles.container, AppTheme[theme + \"Container\"]],\n      children: [_jsxs(View, {\n        style: styles.searchContainer,\n        children: [_jsx(TextInput, {\n          style: [styles.searchInput, AppTheme[theme]],\n          placeholder: \"Busque qualquer artista\",\n          value: searchQuery,\n          onChangeText: handleSearchQueryChange\n        }), _jsx(Text, {\n          style: styles.button,\n          onPress: handleSearchSubmit,\n          children: \"Procurar\"\n        })]\n      }), _jsx(Text, {\n        style: [{\n          fontSize: 18\n        }, {\n          display: 'flex'\n        }, {\n          justifyContent: 'center'\n        }, AppTheme[theme]],\n        children: \"Ou busque por g\\xEAnero\"\n      }), _jsx(View, {\n        style: styles.genresContainer,\n        children: selectedGenres.map(function (genre) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.genreCard, {\n              backgroundColor: '#1DB954'\n            }],\n            onPress: function onPress() {\n              return handleGenrePress(genre);\n            },\n            children: _jsx(Text, {\n              style: styles.genreName,\n              children: genre\n            })\n          }, genre);\n        })\n      }), _jsx(View, {\n        style: styles.resultsContainer,\n        children: artists.items ? artists.items.map(function (artist) {\n          return renderArtist(artist);\n        }) : _jsx(Text, {})\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    flex: 1,\n    padding: 10\n  },\n  button: {\n    backgroundColor: '#1DB954',\n    borderRadius: 50,\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  genresContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n    flexWrap: 'wrap'\n  },\n  genreCard: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5,\n    borderRadius: 50\n  },\n  genreName: {\n    color: '#FFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  artistCard: {\n    width: '48%',\n    borderRadius: 10,\n    backgroundColor: '#FFF',\n    marginVertical: 5,\n    elevation: 2,\n    overflow: 'hidden'\n  },\n  artistImage: {\n    height: 150,\n    width: '100%',\n    resizeMode: 'cover'\n  },\n  artistName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 10\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  searchInput: {\n    flex: 1,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: '#DDD',\n    borderRadius: 10,\n    padding: 10\n  },\n  resultsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","Text","TouchableOpacity","Image","TextInput","Button","buscarArtistasPorGenero","buscarArtistasPorNome","ThemeContext","AppTheme","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","route","selectedGenres","params","_useState","_useState2","_slicedToArray","artists","setArtists","_useState3","_useState4","searchQuery","setSearchQuery","theme","handleGenrePress","_ref2","_asyncToGenerator","genre","response","_x","apply","arguments","handleSearchQueryChange","text","handleSearchSubmit","_ref3","renderArtist","artist","images","style","styles","artistCard","children","onPress","navigate","artistImage","source","uri","url","artistName","name","id","container","searchContainer","searchInput","placeholder","value","onChangeText","button","fontSize","display","justifyContent","genresContainer","map","genreCard","backgroundColor","genreName","resultsContainer","items","create","height","flex","padding","borderRadius","paddingHorizontal","paddingVertical","fontWeight","color","flexDirection","alignItems","marginBottom","flexWrap","marginHorizontal","marginVertical","width","elevation","overflow","resizeMode","textAlign","marginRight","borderWidth","borderColor"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, Image, TextInput, Button } from 'react-native';\r\nimport { buscarArtistasPorGenero, buscarArtistasPorNome } from '../../component/api/spotifyApi';\r\nimport ThemeContext from '../../context/context';\r\nimport AppTheme from '../../component/themes/themes';\r\n\r\nconst HomeScreen = ({ navigation, route }) => {\r\n  const { selectedGenres } = route.params;\r\n  const [artists, setArtists] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const theme = useContext(ThemeContext)[0];\r\n\r\n  const handleGenrePress = async (genre) => {\r\n    const response = await buscarArtistasPorGenero(genre);\r\n    setArtists(response.artists);\r\n  }\r\n\r\n  const handleSearchQueryChange = (text) => {\r\n    setSearchQuery(text);\r\n  }\r\n\r\n  const handleSearchSubmit = async () => {\r\n    if (searchQuery !== \"\") {\r\n      const response = await buscarArtistasPorNome(searchQuery);\r\n      setArtists(response.artists);\r\n    }\r\n  }\r\n\r\n  const renderArtist = (artist) => {\r\n    if (!artist || !artist.images || !artist.images[0]) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <View style={styles.artistCard} key={artist.id}>\r\n        <TouchableOpacity onPress={() => navigation.navigate('Artist', { artist })}>\r\n          <Image style={styles.artistImage} source={{ uri: artist.images[0].url }} />\r\n          <Text style={styles.artistName}>{artist.name}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={[styles.container, AppTheme[theme + \"Container\"]]}>\r\n\r\n        <View style={styles.searchContainer}>\r\n          <TextInput\r\n            style={[styles.searchInput, AppTheme[theme]]}\r\n            placeholder=\"Busque qualquer artista\"\r\n            value={searchQuery}\r\n            onChangeText={handleSearchQueryChange}\r\n          />\r\n          <Text style={styles.button} onPress={handleSearchSubmit}>Procurar</Text>\r\n        </View>\r\n        <Text style={[{ fontSize: 18 }, { display: 'flex' }, { justifyContent: 'center' }, AppTheme[theme]]}>Ou busque por gÃªnero</Text>\r\n        <View style={styles.genresContainer}>\r\n          {selectedGenres.map(genre => (\r\n            <TouchableOpacity\r\n              key={genre}\r\n              style={[styles.genreCard, { backgroundColor: '#1DB954', }]}\r\n              onPress={() => handleGenrePress(genre)}\r\n            >\r\n              <Text style={styles.genreName}>{genre}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n        <View style={styles.resultsContainer}>\r\n          {artists.items ? (\r\n            artists.items.map(artist => renderArtist(artist))\r\n          ) : (\r\n            <Text ></Text>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: '100%',\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#1DB954',\r\n    borderRadius: 50,\r\n    paddingHorizontal: 30,\r\n    paddingVertical: 10,\r\n    fontWeight: 'bold',\r\n    color: 'white'\r\n  },\r\n  genresContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n    flexWrap: 'wrap',\r\n  },\r\n  genreCard: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginHorizontal: 5,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n    borderRadius: 50\r\n  },\r\n  genreName: {\r\n    color: '#FFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  artistCard: {\r\n    width: '48%',\r\n    borderRadius: 10,\r\n    backgroundColor: '#FFF',\r\n    marginVertical: 5,\r\n    elevation: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  artistImage: {\r\n    height: 150,\r\n    width: '100%',\r\n    resizeMode: 'cover',\r\n  },\r\n  artistName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginVertical: 10,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#DDD',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  resultsContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}