{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ThemeContext from \"../../context/context\";\nimport AppTheme from \"../../component/themes/themes\";\nimport { buscarArtistasPorGenero } from \"../../component/api/spotifyApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  var selectedGenres = route.params.selectedGenres;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    artists = _useState2[0],\n    setArtists = _useState2[1];\n  var handleGenrePress = function () {\n    var _ref2 = _asyncToGenerator(function* (genre) {\n      var result = yield buscarArtistasPorGenero(genre);\n      setArtists(result.artists.items);\n    });\n    return function handleGenrePress(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: [styles.container, AppTheme[theme + \"Container\"]],\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollView,\n      children: [selectedGenres.map(function (genre, index) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.card, AppTheme[theme + \"Container\"]],\n          onPress: function onPress() {\n            return handleGenrePress(genre);\n          },\n          children: _jsx(Text, {\n            style: [styles.cardTitle, AppTheme[theme]],\n            children: genre\n          })\n        }, index);\n      }), _jsx(SearchResults, {\n        results: artists,\n        children: function children(_ref3) {\n          var name = _ref3.name,\n            images = _ref3.images;\n          return _jsxs(TouchableOpacity, {\n            style: styles.artistCard,\n            children: [_jsx(Image, {\n              style: styles.artistImage,\n              source: {\n                uri: images[0].url\n              }\n            }), _jsx(Text, {\n              style: styles.artistName,\n              children: name\n            })]\n          }, name);\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollView: {\n    padding: 16\n  },\n  card: {\n    height: 80,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  cardTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  artistCard: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 8\n  },\n  artistImage: {\n    height: 60,\n    width: 60,\n    borderRadius: 30,\n    marginRight: 16\n  },\n  artistName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","Text","TouchableOpacity","ScrollView","Image","ThemeContext","AppTheme","buscarArtistasPorGenero","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","route","_useContext","theme","selectedGenres","params","_useState","_useState2","_slicedToArray","artists","setArtists","handleGenrePress","_ref2","_asyncToGenerator","genre","result","items","_x","apply","arguments","style","styles","container","children","contentContainerStyle","scrollView","map","index","card","onPress","cardTitle","SearchResults","results","_ref3","name","images","artistCard","artistImage","source","uri","url","artistName","create","flex","padding","height","borderRadius","justifyContent","alignItems","marginBottom","fontSize","fontWeight","flexDirection","marginVertical","width","marginRight"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, ScrollView, Image } from 'react-native';\r\nimport ThemeContext from '../../context/context';\r\nimport AppTheme from '../../component/themes/themes';\r\nimport { buscarArtistasPorGenero } from '../../component/api/spotifyApi';\r\n\r\nconst HomeScreen = ({ navigation, route }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { selectedGenres } = route.params;\r\n  const [artists, setArtists] = useState([]);\r\n\r\n  const handleGenrePress = async (genre) => {\r\n    const result = await buscarArtistasPorGenero(genre);\r\n    setArtists(result.artists.items);\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container,  AppTheme[theme+\"Container\"] ]}>\r\n      <ScrollView contentContainerStyle={styles.scrollView}>\r\n        {selectedGenres.map((genre, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            style={[styles.card, AppTheme[theme + \"Container\"]]}\r\n            onPress={() => handleGenrePress(genre)}\r\n          >\r\n            <Text style={[styles.cardTitle, AppTheme[theme]]}>{genre}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n        <SearchResults results={artists}>\r\n          {({ name, images }) => (\r\n            <TouchableOpacity key={name} style={styles.artistCard}>\r\n              <Image style={styles.artistImage} source={{ uri: images[0].url }} />\r\n              <Text style={styles.artistName}>{name}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </SearchResults>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  scrollView: {\r\n    padding: 16,\r\n  },\r\n  card: {\r\n    height: 80,\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  artistCard: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 8,\r\n  },\r\n  artistImage: {\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 30,\r\n    marginRight: 16,\r\n  },\r\n  artistName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}