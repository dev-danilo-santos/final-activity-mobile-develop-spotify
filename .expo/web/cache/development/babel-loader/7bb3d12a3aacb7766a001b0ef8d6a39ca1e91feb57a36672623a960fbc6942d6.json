{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { buscarArtistasPorGenero, buscarArtistasPorNome } from \"../../component/api/spotifyApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var _artists$items;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var selectedGenres = route.params.selectedGenres;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    artists = _useState2[0],\n    setArtists = _useState2[1];\n  var handleGenrePress = function () {\n    var _ref2 = _asyncToGenerator(function* (genre) {\n      var response = yield buscarArtistasPorGenero(genre);\n      setArtists(response.artists);\n    });\n    return function handleGenrePress(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderArtist = function renderArtist(artist) {\n    return _jsx(View, {\n      style: styles.artistCard,\n      children: _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Artist', {\n            artist: artist\n          });\n        },\n        children: [_jsx(Image, {\n          style: styles.artistImage,\n          source: {\n            uri: artist.images[0].url\n          }\n        }), _jsx(Text, {\n          style: styles.artistName,\n          children: artist.name\n        })]\n      })\n    }, artist.id);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.genresContainer,\n      children: selectedGenres.map(function (genre) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.genreCard, {\n            backgroundColor: \"black\"\n          }],\n          onPress: function onPress() {\n            return handleGenrePress(genre);\n          },\n          children: _jsx(Text, {\n            style: styles.genreName,\n            children: genre\n          })\n        }, genre);\n      })\n    }), _jsx(View, {\n      style: styles.resultsContainer,\n      children: (_artists$items = artists.items) == null ? void 0 : _artists$items.map(function (artist) {\n        return renderArtist(artist);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  genresContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n    flexWrap: 'wrap'\n  },\n  genreCard: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  genreName: {\n    color: '#FFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  resultsContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  artistCard: {\n    width: '45%',\n    margin: 5,\n    borderRadius: 10,\n    backgroundColor: '#FFF',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  artistImage: {\n    width: '100%',\n    height: 150,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10\n  },\n  artistName: {\n    padding: 10,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useContext","StyleSheet","View","Text","TouchableOpacity","Image","buscarArtistasPorGenero","buscarArtistasPorNome","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","_artists$items","navigation","route","selectedGenres","params","_useState","_useState2","_slicedToArray","artists","setArtists","handleGenrePress","_ref2","_asyncToGenerator","genre","response","_x","apply","arguments","renderArtist","artist","style","styles","artistCard","children","onPress","navigate","artistImage","source","uri","images","url","artistName","name","id","container","genresContainer","map","genreCard","backgroundColor","genreName","resultsContainer","items","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","flexWrap","paddingVertical","paddingHorizontal","marginHorizontal","borderRadius","marginVertical","color","fontSize","fontWeight","width","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderTopRightRadius","textAlign"],"sources":["C:/Users/T-GAMER/Desktop/11-async-storage/src/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, Image } from 'react-native';\r\nimport { buscarArtistasPorGenero, buscarArtistasPorNome } from '../../component/api/spotifyApi';\r\n\r\nconst HomeScreen = ({ navigation, route }) => {\r\n  const { selectedGenres } = route.params;\r\n  const [artists, setArtists] = useState({});\r\n\r\n  const handleGenrePress = async (genre) => {\r\n    const response = await buscarArtistasPorGenero(genre);\r\n    setArtists(response.artists);\r\n  }\r\n\r\n  const renderArtist = (artist) => {\r\n    return (\r\n      <View style={styles.artistCard} key={artist.id}>\r\n        <TouchableOpacity onPress={() => navigation.navigate('Artist', { artist })}>\r\n          <Image style={styles.artistImage} source={{ uri: artist.images[0].url }} />\r\n          <Text style={styles.artistName}>{artist.name}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.genresContainer}>\r\n        {selectedGenres.map(genre => (\r\n          <TouchableOpacity\r\n            key={genre}\r\n            style={[styles.genreCard, { backgroundColor: `black` }]}\r\n            onPress={() => handleGenrePress(genre)}\r\n          >\r\n            <Text style={styles.genreName}>{genre}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      <View style={styles.resultsContainer}>\r\n        {artists.items?.map(artist => renderArtist(artist))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  genresContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n    flexWrap: 'wrap',\r\n  },\r\n  genreCard: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginHorizontal: 5,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginVertical:5\r\n  },\r\n  genreName: {\r\n    color: '#FFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  resultsContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  artistCard: {\r\n    width: '45%',\r\n    margin: 5,\r\n    borderRadius: 10,\r\n    backgroundColor: '#FFF',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 1.41,\r\n    elevation: 2,\r\n  },\r\n  artistImage: {\r\n    width: '100%',\r\n    height: 150,\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n  },\r\n  artistName: {\r\n    padding: 10,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}